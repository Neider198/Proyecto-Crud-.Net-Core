// <auto-generated />
using BackEnd.context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace BackEnd.Migrations
{
    [DbContext(typeof(AplicacionDbContext))]
    partial class AplicacionDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("BackEnd.Models.Persona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying");

                    b.Property<int>("SexoId")
                        .HasColumnType("integer");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("character varying");

                    b.Property<int>("TipoIdentififcacionId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SexoId");

                    b.HasIndex("TipoIdentififcacionId");

                    b.ToTable("Personas");
                });

            modelBuilder.Entity("BackEnd.Models.Sexo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying");

                    b.HasKey("Id");

                    b.ToTable("Sexos", "basicos");
                });

            modelBuilder.Entity("BackEnd.Models.TipoIdentificacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying");

                    b.HasKey("Id");

                    b.ToTable("TipoIdentificacions", "basicos");
                });

            modelBuilder.Entity("BackEnd.Models.Persona", b =>
                {
                    b.HasOne("BackEnd.Models.Sexo", "Sexo")
                        .WithMany("Personas")
                        .HasForeignKey("SexoId")
                        .HasConstraintName("Personas_Sexos")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackEnd.Models.TipoIdentificacion", "TipoIdentificacion")
                        .WithMany("Personas")
                        .HasForeignKey("TipoIdentififcacionId")
                        .HasConstraintName("Personas_TipoIdentificacions")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sexo");

                    b.Navigation("TipoIdentificacion");
                });

            modelBuilder.Entity("BackEnd.Models.Sexo", b =>
                {
                    b.Navigation("Personas");
                });

            modelBuilder.Entity("BackEnd.Models.TipoIdentificacion", b =>
                {
                    b.Navigation("Personas");
                });
#pragma warning restore 612, 618
        }
    }
}
